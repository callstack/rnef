name: 'RNEF Remote Build - iOS Simulator'
description: 'Github implementation of the RNEF Remote Build for iOS Simulator'

inputs:
  github-token:
    description: "GitHub Token"
    required: false
    default: ${{ github.token }}
  scheme:
    description: The workspace scheme to build
    required: false
    default: "HelloWorld"
  architectures:
    description: The architectures to build for
    required: false
    default: "arm64 x86_64"

outputs:
  artifact-url:
    description: 'URL of the relevant iOS Simulator build artifact (could be cached)'
    value: ${{ steps.cached-url.outcome == 'success' && steps.cached-url.outputs.artifact-url || steps.upload-artifact.outputs.artifact-url }}

runs:
  using: "composite"
  steps:
    - name: Native Fingerprint
      id: fingerprint
      uses: ./.github/actions/rnef-native-fingerprint
      with:
        platforms: ios

    - name: Set variables
      run: |
        echo "ARTIFACT_NAME=${{inputs.scheme}}-${{inputs.architectures}}-${{ steps.fingerprint.outputs.hash}}.tar.gz" >> $GITHUB_ENV
      shell: bash

    - name: Find artifact URL
      id: cached-url
      uses: ./.github/actions/find-artifact
      with:
        name: ${{ env.ARTIFACT_NAME }}

    - name: Post Cached Build (if found)
      if: steps.cached-url.outputs.artifact-url
      uses: ./.github/actions/rnef-post-build
      with:
        platform: iOS Simulator
        artifact-url: ${{ steps.cached-url.outputs.artifact-url }}

    - name: Install Pods
      if: ${{ !steps.cached-url.outputs.artifact-url }}
      run: |
        cd ios
        pod install --verbose
      shell: bash

    - name: Build iOS
      if: ${{ !steps.cached-url.outputs.artifact-url }}
      run: |
        cd ios
        pnpm rnef build:ios
      shell: bash

    - name: Prepare Artifact
      if: ${{ !steps.cached-url.outputs.artifact-url }}
      run: |
        app=$(find ios/DerivedData/Build/Products/Debug-iphonesimulator -maxdepth 1 -name '*.app' -type d | head -1)
        app_dir=$(dirname "${app}")
        app_name=$(basename "${app}")
        tar -C "${app_dir}" -czvf "${{ env.ARTIFACT_NAME }}" "${app_name}"
      shell: bash

    - name: Upload IPA
      id: upload-artifact
      if: ${{ !steps.cached-url.outputs.artifact-url }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_NAME }}
        if-no-files-found: error

    - name: Post Build
      if: ${{ !steps.cached-url.outputs.artifact-url }}
      uses: ./.github/actions/rnef-post-build
      with:
        platform: iOS Simulator
        artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
