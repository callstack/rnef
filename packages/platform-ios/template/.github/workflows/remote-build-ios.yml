name: Remote Build iOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: remote-build-ios-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-device:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Remove next line after public release
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm install

      - name: RNEF Remote Build - iOS device
        uses: ./.github/actions/rnef-remote-build-ios
        with:
          destination: device
          configuration: Release
          certificate-base64: ${{ secrets.APPLE_BUILD_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.APPLE_BUILD_CERTIFICATE_PASSWORD }}
          provisioning-profile-base64: ${{ secrets.APPLE_BUILD_PROVISIONING_PROFILE_BASE64 }}
          provisioning-profile-name: "Distribution AdHoc RnefRemoteBuildTest"
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}

  build-simulator:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Remove next line after public release
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm install

      - name: RNEF Remote Build - iOS simulator
        uses: ./.github/actions/rnef-remote-build-ios
        with:
          destination: simulator
          configuration: Debug
